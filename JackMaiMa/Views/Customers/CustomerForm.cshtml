@model JackMaiMa.Models.Customer
@using JackMaiMa.Models
@using Microsoft.AspNet.Identity

@{
    bool isEdit = (Model != null && Model.Id > 0) ? true : false;
    string header = isEdit ? "แก้ไข" : "เพิ่ม";
    header += "ลูกค้า";
    ViewBag.Title = header;
}

<h3>@header</h3>
<hr />
@using (Html.BeginForm("Save", "Customers", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(m => m.Name, "ลูกค้า", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ContactName, "ชื่อผู้ติดต่อ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ContactName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ContactName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ContactTitle, "ตำแหน่งผู้ติดต่อ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ContactTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ContactTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Address, "ที่อยู่", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Address
                 , GlobalValue.TextAreaRow
                 , GlobalValue.TextAreaCol
                 , new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Tambon, "แขวง/ตำบล", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Tambon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Tambon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Amphur, "เขต/อำเภอ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Amphur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Amphur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Province, "จังหวัด", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Province, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PostalCode, "รหัสไปรษณีย์", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Phone, "โทรศัพท์", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, "อีเมล์", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.OptionalContact, "ช่องทางติดต่ออื่น", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.OptionalContact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.OptionalContact, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (isEdit)
        {
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.Stamp)
        }

        @{
            string username = User.Identity.GetUserName();
            if (!String.IsNullOrWhiteSpace(username))
            {
                int assignIndex = username.IndexOf('@');
                username = username.Substring(0, assignIndex);
            }
        }
        @Html.HiddenFor(m => m.CreatedBy, new { @Value = username })
        @Html.HiddenFor(m => m.ModifiedBy, new { @Value = username })


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="บันทึก" class="btn btn-primary" />
            </div>
        </div>
    </div>
            }

<div>
    @Html.ActionLink("กลับสู่หน้ารายชื่อ", "Index", null, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}